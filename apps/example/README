This example application was modified to work with onvm

========================================================================
 USAGE OF EXAMPLE APPLICATIONS
========================================================================

epserver: a simple mtcp-epoll-based web server
   Single-Process, Multi-threaded Usage:
      ./epserver -p www_home -f epserver.conf [-N #cores] [-c core_list] -- [-s service_id]
      ex) ./epserver -p /home/notav/www -f epserver.conf -N 1 -c 6 -- -r 1


options:
  www_home: the directory to server. # max files are limited to 
            MAX_FILES in epserver.c:36
  -N: number of CPU cores to use. default: all existing cores
  -p: path to www/ files
  -f: path to mtcp configuration file
  -c: the core_list on which the process should run
      [So far only single core is supported]
  onvm args after --
  -n: instanse id
  -r: service id 
  -d: destination id

Epserver doesn't support large files
  - Large files roughly > 10 Megabytes are currently causing an error in rte_eal_init for dpdk/onvm setup 

========================================================================

epwget: simple mtcp-epoll-based http request generator
 usage: ./epwget URL #requests [-N #cores] [-c concurrency]
    ex) ./epwget 10.0.0.43/example.txt 10000000 -N 8 -c 8000

options:
  URL: url of the content to download.
  #requests: number of requests to generate
  -N: number of CPU cores to use. default: min(# cores, # requests)
  -c: number of maximum concurrent connections. default: 100

notes:
  - epwget can use a range of IP addresses for larger concurrent 
	connections that cannot be in an IP. you can set it in epwget.c:33.
  - epwget overrides some part of the settings in epgwet.conf and uses 
    mtcp_setconf() internally to apply the input arguments to the 
    configuration.

========================================================================

                   Contact: mtcp-user at list.ndsl.kaist.edu
                             April 2, 2014. 
                 EunYoung Jeong <notav at ndsl.kaist.edu>
